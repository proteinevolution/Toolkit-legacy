HHsearch 1.0 May 2004

* Version used for benchmark published in Soding J, Bioinformatics (2005).

_______________________________________________________________________________


HHsearch 1.1 August 2004

* Format of *.hhm files was changed. Transition pseudocounts are now 
calculated on the basis of the effective number of sequences that are in
M states, I states and M states, respectively. These numbers are listed
as Neff, Neff_I,  Neff_D in seperate columns of the hhm files. (Improvement
in sensitivity by a few percent.)
* Reduced memory requirements by a factor of four. Memory requirement now is 
approx. 6*MAXRES^2 bytes ( + space for ALL sequences in SEQ records of HMM 
database). MAXRES is maximum number of query residues, 5000 at the moment

_______________________________________________________________________________


HHsearch 1.1.3 November 2004

* Allowed up to 10000 sequences to be displayed in output alignments
* Added warning message when not enough memory available
* Corrected warning message when not enough different superfamilies are 
contained in the searched database to fit the score distribution.
* Removed a bug in the part that builds the output alignments that could cause
a segmentation fault on rare occasions.
* Remove carriage return (CR) symbols in names of input sequences that 
could mess up output alignments when sequences were read in via a web form. 
* Corrected a bug in the calculation of transition probabilities for insert 
states. (Improvement in sensitivity by ~2%.) Need to recalculate old HMMs.
* Changed format of hitlist in output. Now, the first 30 characters of the 
sequence name and description are shown, not only the ID and the family code: 
(No Hit Prob E-value...). This is more suitable for databases other than SCOP 
* Removed limit of 200 characters for sequence descriptions to be able to 
display the extensive annotation for Pfam and SMART alignments, for instance.
* In the output alignment the numbering of the consensus sequence did not 
correspond to the match columns anymore. This has been corrected.

_______________________________________________________________________________


HHsearch 1.1.4 March 2005
 
* Removed small memory allocation bug in function that reads .hhdefaults file.
* Reserve dynamic programming memory dynamically. Memory requirement is now 
6*MAXRES*(Query_length+2) bytes (+ space for ALL sequences in SEQ records of 
HMM database).
* Changed maximum number of sequences in input alignments from 20 000 to 30 000
* Changed maximum length of sequences in input alignments from 20 000 to 30 000
* Changed maximum number of match states MAXRES in input alignments from 5000 
to 6000
* In output alignments, changed the name of the consensus sequences from
'Cons-<id>' to 'Consensus'.
* Added secondary structure-dependent gap penalties ('-ssgap' option).
Gap opening within SS elements costs X bits after 1st, 2X bits after 2nd and 
3X bits after third SS residue, where X is 1.0 bit by default and can be 
changed with the '-ssgapd X' option. 
  => A small benchmark on the CAFASP4 targets showed NO improvement! 
* Included binaries for MacOSX (Darwin) and OSF1/Tru64_UNIX (thanks to Paul 
Sarokas, GSK) 

_______________________________________________________________________________


HHsearch 1.2 January 2006
 
* Parallelized hhsearch for SMPs: using option -cpu <int>, hhsearch can be run 
in parallel on several CPUs of a symmetric multiprocessor (SMP) machine. Speed 
with two CPUs is ~ *1.9. Memory requirements for dynamic programming 
matrix is now ~100kb*(Query_length+2) * number of queue bins. 
Number of queue bins = floor(1.2*CPUs+1) (for cpu>1), 1 otherwise

* HHsearch can now automatically detect and read HMMER format (ASCII). 
Predicted secondary structure (or consensus secondary structure) can be 
used in HMMER format in the same way as in HHsearch format. The script
addpsipred.pl is abe to add the information for predicted secondary structure
to a HMMER file (as well as to a FASTA alignment). However, representative 
sequences for query-template alignments are not supported by HMMER's format. 

* Multiple databases can now be searched with -d 'db1.hhm db2.hhm ...' 

* Added option -alt <int> for displaying up to <int> alternative alignments 
that have no residue pairs in common (e.g. when aligning repeat proteins)

* Added percent sequence identity to alignment information 

* Increased speed of hhsearch database searching by ~15% 

* Added possibility to read from standard input and write to standard output

* Removed the limit 30 000 on maximum number of HMMs in database.

* Increased maximum number of match states in HMM from 6000 to 15000.

* Checked code sanity with Valgrind (a great tool! http://valgring.org)
and removed a bug that was responsible for rare segmentation faults.

* Removed a bug in the maximum sequence identity filtering routine. Before, 
when two sequences had no overlap, the shorter of the two was filtered out.
This could have affected HMMs for multidomain proteins quite badly.

* Changed options for minimum and maximum numbers of sequences in output file 
(options -p, -E, -B, -b, -Z, -z)

* Impoved sensitivity slightly (~10%) by using option '-diff 100' as default 
for hhmake and hhsearch (use '-diff 0' to turn this option off). Optimized 
internal pseudocount admixture parameter with -diff 100  setting. Results 
between HHsearch 1.2 and earlier versions may therefore differ somewhat.

* Perl scripts: Added -Q option to alignblast.pl that allows to include query 
sequence as first sequence of extracted alignment. Script addpsipred.pl can 
now add PSIPRED-predicted secondary structure also to HMMER model files.




Bugs? Ideas? Need for improvement? 
Or just get included in our mailing list to get notified of new releases?
Please drop me an e-mail: johannes@soeding.com
